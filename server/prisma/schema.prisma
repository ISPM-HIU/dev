generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  name        String      @db.VarChar(255)
  last_name   String?     @db.VarChar(255)
  type        String?     @db.VarChar(255)
  email       String      @unique
  password    String? 
  isDispo     Boolean?    @default(false)
  number      String?      @db.VarChar(255)
  fako        Fako?        @relation(fields: [fakoId], references: [id], onDelete: Cascade)
  fakoId      Int?
  signals     Signal[]
}

model Organization {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  name        String      @db.VarChar(255)
  email       String      @unique
  password    String? 
  location    String      @db.VarChar(255)
  number      String?      @db.VarChar(255)
}

model Fako {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  name        String      @db.VarChar(255)
  location    String      @db.VarChar(255)
  isValid     Boolean?    @default(false)
  qrCode      String?      @db.VarChar(255)
  users       Users[]
  signal      Signal[]
}

model Signal {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  fako        Fako        @relation(fields: [fakoId], references: [id], onDelete: Cascade)
  fakoId      Int
  user        Users       @relation(fields: [userId], references: [id], onDelete: Cascade) 
  userId      Int
}